#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import unittest

from P2025_Practica3_Solution_Skeleton import *


class Test_1_1_encrypt(unittest.TestCase):

    def test_1(self):
        e = 6262051786919039420094506936096610013112923123780749602600802403286541549335765437161145424955737669373972842061737523783381399460331896516523902078377154692320704182585988958024363574397350182814479440408073739060222819737991688815298818720994636036087653784105276777697119530753465216913869838112863157890415352871935597857236977029575822228311018055253547717734552016045074801214936803375218550676046319686793551396109420417072843622538966529057395574835290678840258405855196317988098155303412261266371332501160127311383694620681353017489647603398890392622456664393648370907455205272635660280650919906828051973985
        n = 12490073924223973779952495174551835559350251780425933466818064644419814523190460892869430544625817615345292005394854093583854278346073855545541683465103004671901115651264674924779937518729229595410007440282846953305105664056093882498031929778584790219608025635824148765450058312261789533721347023151643897433452703679100522853171632876023460043637975557224061804349249718291582035964640430215339591802875669290619514873719781832743118238764929141274207659125842932932381727782094674562403961344535621089055860560649256579713527482427499874160417549452560201308589570145059622106308558193372236212872798521411647143373
        m = 123456789123456789123456789
        kpub=(e,n)
        encriptat = 11882942796195303279931807377168920006119165438421815351388933997538880518715559278946004748525109870698663575981660352080879564056396573612271169019518119822807263422933805914957408069068897779227086627464494978335966709907153329378144000313782582913803495860035258443971916412058576073092643227660832011109925277413138468149238769302948408366312515413321384176785109507249897719026938250136724719593131464348837271359098219644967255511462978851061385788125418581346855864278882213976893891947981434778373195000901165446723796735666568560284883965364432910423617478584288741931148055347016326033120379231480728366411
        self.assertEqual(encriptat, encrypt(kpub,m))
   
    def test_2(self):
        e = 8284494076566453048618838282960334924326647279424294998520819836618631238308133432920311650879532228535705229266486975984396251670674285004459401393789032382089039403599249912841745800014886472281046792741997114487805412141282928092726808709503191083707659061729602224635125983849638499616381275011852847830978428864788040749688564239259220965958113085425234704351176707807075588249853741752403130834849948684711178047042718392166281871373216556722092964974260519865038565439524410776183324555337721579176814409617633166174978744405512931658898430410889415285931418565318966579581817374059964488988553435690017078967
        n = 15380775453681009972505003122528717374996891402779162175694608719397847385409727967401241761171247749682603676227235917255445409275943764225274182020002802056614287960413831702098119030914739187429418372441105333693531495330574229507790887507729935303073571826335272941595552272874610851494877272281214696088513516112913499712692511318747229328879036908014860332657066441255670572074301957417388825851965187728431734408133362937654272029787080626082943779913449395077170730182258855074693243159442650090374018301443880480826469026403949309484303348375861963462248359431660973216993625736140793581758835424535014230213
        m = 123456789123456789123456789
        kpub=(e,n)
        encriptat = 4682553565543234444402024477734605198351781826762328596083484073907796895420058839280126213919289737577763642668840467334732860101888539857039105616289745048805524600274742334990940123328050333346760234877474619220911825109971238469070703106284365230399910655940688446384531316087187538030055412454363621795390487875821631618279624795771461615041266139255630468690416731094626303293322859538273903491042828000821472578878752271154732454640167583829925552263603676741323688607073128303566867488954426178993228857343648892753230115318881922341020673955294361463032398681858706479210016517451671662009882520818873868
        self.assertEqual(encriptat, encrypt(kpub,m))

    def test_3(self):
        e = 6186601325711675941244323666058049215840729312287320162548003058689634160917027659784682199990058639683984810368807584867078541165057326102823397346444817147995150134421707249648027131574637320185592332561307143499135737680831721002739591292083748088500981921241826530965696678555794323255288182086310264362969530928468356206560642364836152199338711140658104204245197550354243297654647834958107406524328788878967650769748431482028982153598894772229663178593673272248432116612826922211880109909243304492911325215515187522475838723371184594526995898995298925644783469768892785978412112854348548461918790539683345614689
        n = 13616533735883970052413838279723760115708426980562018698049015792739955800710480502687597410655589973984016127678722266429042079924362574088018716365205500869344675068861124939290689683703719895670879718069093845054594500669727194798875025893634378942007675631226456622723334431609006443068839048116370455252271727910305230611520864252114946667194969597777906136564458165045256469775393593345677064117088612813323049098208202835272261662447016765714133116599007315993016441924807492601315967551928325338035095839135673310214583099626377308824254252551382765376660631310178938251498594761438973915054332435118149192801
        m = 987654321987654321987654321
        kpub=(e,n)
        encriptat = 2556739444706700372854513993877348639375237386139300796397729533742886345790650586165421185840451548325959252561017788491404090992294356571281027173449870780814209228057075109353514145841957658074294787664015283376702466422094335115701263890229995385840057658412636051292466158801365537182488531219888363754407831201877371468041035155244696850207427940946404295600404833448557043464943709593061076572263795561945751833091158910892311470393343992192739606844205109875159004827448453239199940300590501714038353237785804667254877608942873204576341537905906482395723936611232339987289450475431302491545661651840574836827
        self.assertEqual(encriptat, encrypt(kpub,m))

class Test_1_2_decrypt(unittest.TestCase):

    def test_1(self):
        d = 3294657726863867560024864627329990543973310903318104266429387274080957209526637134513797305224870900788891721262161873128327075674963114732767847841291674403823225907497428248380630911815529028124755205056653087801396820783667806864475002442361734298505020284653059590712058665090862022925981827386574629495179209164629839308642004971348358345303612649186821385204873620996208400636838619242817443587563707048332324236797014076104820863208165043437485419097191814582171226579128241417582570138859103243944989625896997879498539260280683209350962944734870117496581231489829227303750584814839225425239121978284756884425
        n = 12490073924223973779952495174551835559350251780425933466818064644419814523190460892869430544625817615345292005394854093583854278346073855545541683465103004671901115651264674924779937518729229595410007440282846953305105664056093882498031929778584790219608025635824148765450058312261789533721347023151643897433452703679100522853171632876023460043637975557224061804349249718291582035964640430215339591802875669290619514873719781832743118238764929141274207659125842932932381727782094674562403961344535621089055860560649256579713527482427499874160417549452560201308589570145059622106308558193372236212872798521411647143373
        encriptat = 11882942796195303279931807377168920006119165438421815351388933997538880518715559278946004748525109870698663575981660352080879564056396573612271169019518119822807263422933805914957408069068897779227086627464494978335966709907153329378144000313782582913803495860035258443971916412058576073092643227660832011109925277413138468149238769302948408366312515413321384176785109507249897719026938250136724719593131464348837271359098219644967255511462978851061385788125418581346855864278882213976893891947981434778373195000901165446723796735666568560284883965364432910423617478584288741931148055347016326033120379231480728366411
        kpriv=(d,n)
        original = 123456789123456789123456789
        new_decrypt=decrypt(kpriv,encriptat)
        self.assertEqual(new_decrypt, original)

    def test_2(self):
        d = 6172249773221468910695510994371401384855062236050899818937618568989133204092880096655006043459267016910413293947280658392627601942476633762164087611277241684647704274280828448240947915998760476517419051600567407945797101275731060819370845000359480399947731048688580103189156930289363319140396257210619825376479582526009378348409177824798293286405142234659195571595418149843308976993488591454819382604216462345011160369224995392526038164388889790417252876473460169641360642647940747244321934116466413590152606569768836047921659450900271979683450029140355816251839307462512623229577775237959287537706740453931000671303
        n = 15380775453681009972505003122528717374996891402779162175694608719397847385409727967401241761171247749682603676227235917255445409275943764225274182020002802056614287960413831702098119030914739187429418372441105333693531495330574229507790887507729935303073571826335272941595552272874610851494877272281214696088513516112913499712692511318747229328879036908014860332657066441255670572074301957417388825851965187728431734408133362937654272029787080626082943779913449395077170730182258855074693243159442650090374018301443880480826469026403949309484303348375861963462248359431660973216993625736140793581758835424535014230213
        encriptat = 4682553565543234444402024477734605198351781826762328596083484073907796895420058839280126213919289737577763642668840467334732860101888539857039105616289745048805524600274742334990940123328050333346760234877474619220911825109971238469070703106284365230399910655940688446384531316087187538030055412454363621795390487875821631618279624795771461615041266139255630468690416731094626303293322859538273903491042828000821472578878752271154732454640167583829925552263603676741323688607073128303566867488954426178993228857343648892753230115318881922341020673955294361463032398681858706479210016517451671662009882520818873868
        kpriv=(d,n)
        original = 123456789123456789123456789
        new_decrypt=decrypt(kpriv,encriptat)
        self.assertEqual(new_decrypt, original)

    def test_3(self):
        d = 12358481447031088330782079388928349021200881116546750857778229093853523292763190082941240806035517029879762883232861626961965752030332597975073542683744593885128883440511153250238904826722903279441509338322067126107031433028806508267063121864501917119215351450083944514005523299791075374135640990441796039910870328714023455155516318434861375841267487031080915575552179680873257178564398925652374579125218292825482436538157886949996411862522407057288509120810196837939775449761112264360374298004261779115958870354295282673391679353954228687714453298951941337423659604475699898338680680462963463422146762960260532220665
        n = 13616533735883970052413838279723760115708426980562018698049015792739955800710480502687597410655589973984016127678722266429042079924362574088018716365205500869344675068861124939290689683703719895670879718069093845054594500669727194798875025893634378942007675631226456622723334431609006443068839048116370455252271727910305230611520864252114946667194969597777906136564458165045256469775393593345677064117088612813323049098208202835272261662447016765714133116599007315993016441924807492601315967551928325338035095839135673310214583099626377308824254252551382765376660631310178938251498594761438973915054332435118149192801
        encriptat = 2556739444706700372854513993877348639375237386139300796397729533742886345790650586165421185840451548325959252561017788491404090992294356571281027173449870780814209228057075109353514145841957658074294787664015283376702466422094335115701263890229995385840057658412636051292466158801365537182488531219888363754407831201877371468041035155244696850207427940946404295600404833448557043464943709593061076572263795561945751833091158910892311470393343992192739606844205109875159004827448453239199940300590501714038353237785804667254877608942873204576341537905906482395723936611232339987289450475431302491545661651840574836827
        kpriv=(d,n)
        original = 987654321987654321987654321
        new_decrypt=decrypt(kpriv,encriptat)
        self.assertEqual(new_decrypt, original)

class Test_1_3_RSA_sign(unittest.TestCase):

    def test_1(self):
        d = 3294657726863867560024864627329990543973310903318104266429387274080957209526637134513797305224870900788891721262161873128327075674963114732767847841291674403823225907497428248380630911815529028124755205056653087801396820783667806864475002442361734298505020284653059590712058665090862022925981827386574629495179209164629839308642004971348358345303612649186821385204873620996208400636838619242817443587563707048332324236797014076104820863208165043437485419097191814582171226579128241417582570138859103243944989625896997879498539260280683209350962944734870117496581231489829227303750584814839225425239121978284756884425
        n = 12490073924223973779952495174551835559350251780425933466818064644419814523190460892869430544625817615345292005394854093583854278346073855545541683465103004671901115651264674924779937518729229595410007440282846953305105664056093882498031929778584790219608025635824148765450058312261789533721347023151643897433452703679100522853171632876023460043637975557224061804349249718291582035964640430215339591802875669290619514873719781832743118238764929141274207659125842932932381727782094674562403961344535621089055860560649256579713527482427499874160417549452560201308589570145059622106308558193372236212872798521411647143373 
        kpriv=(d,n)
        original = 123456789123456789123456789
        RSA_signat = 2573032624927937215507080690978996457543877278908959582994842345262897843968730124642174392615192436371178504811210326636717361090339967438794290094093595989411012712715773021031989395116280501158093270612249925520311188773356965135467620228606175138527766562243528618676743481447864698894387195650504835118652938613234293101214209196123060163504450443856735948945021699008549146902842708795040585480915634919940942376837918603830281194190562480719396697984366071226059307118674308953425454004634977412695916147821896130272902855119536581679895825296846234754127751266789571034929567535157398319218314437301607159686
        self.assertEqual(RSA_sign(kpriv,original), RSA_signat)

    def test_2(self):
        d = 6172249773221468910695510994371401384855062236050899818937618568989133204092880096655006043459267016910413293947280658392627601942476633762164087611277241684647704274280828448240947915998760476517419051600567407945797101275731060819370845000359480399947731048688580103189156930289363319140396257210619825376479582526009378348409177824798293286405142234659195571595418149843308976993488591454819382604216462345011160369224995392526038164388889790417252876473460169641360642647940747244321934116466413590152606569768836047921659450900271979683450029140355816251839307462512623229577775237959287537706740453931000671303
        n = 15380775453681009972505003122528717374996891402779162175694608719397847385409727967401241761171247749682603676227235917255445409275943764225274182020002802056614287960413831702098119030914739187429418372441105333693531495330574229507790887507729935303073571826335272941595552272874610851494877272281214696088513516112913499712692511318747229328879036908014860332657066441255670572074301957417388825851965187728431734408133362937654272029787080626082943779913449395077170730182258855074693243159442650090374018301443880480826469026403949309484303348375861963462248359431660973216993625736140793581758835424535014230213 
        kpriv=(d,n)
        original = 123456789123456789123456789
        RSA_signat = 9128595458381216738431165701026840709793824867502407477777744938789898042117029953065486408673739721840557855223420185106603540064417132368373159104857714209670500164030418140739654377859715172716120232920575747002908335344690209116713393081236083402645481971196315789403951952597334307126227346877524423097468985304197493892265579463927959647514574293776702412463601389915887715680303467660984059463403457323150428937362828047138977560332398904996172206654718493244509017245633007604442527920630206112282761561432742818625121305420336835021336460147961741259351720116025403103271220600449795729345065311386752404930
        self.assertEqual(RSA_sign(kpriv,original), RSA_signat)

    def test_3(self):
        d = 12358481447031088330782079388928349021200881116546750857778229093853523292763190082941240806035517029879762883232861626961965752030332597975073542683744593885128883440511153250238904826722903279441509338322067126107031433028806508267063121864501917119215351450083944514005523299791075374135640990441796039910870328714023455155516318434861375841267487031080915575552179680873257178564398925652374579125218292825482436538157886949996411862522407057288509120810196837939775449761112264360374298004261779115958870354295282673391679353954228687714453298951941337423659604475699898338680680462963463422146762960260532220665
        n = 13616533735883970052413838279723760115708426980562018698049015792739955800710480502687597410655589973984016127678722266429042079924362574088018716365205500869344675068861124939290689683703719895670879718069093845054594500669727194798875025893634378942007675631226456622723334431609006443068839048116370455252271727910305230611520864252114946667194969597777906136564458165045256469775393593345677064117088612813323049098208202835272261662447016765714133116599007315993016441924807492601315967551928325338035095839135673310214583099626377308824254252551382765376660631310178938251498594761438973915054332435118149192801 
        kpriv=(d,n)
        original = 987654321987654321987654321
        RSA_signat = 10220606035194454538208519084006110780268880959238040965037789735340309014485645674476820973932582227127295577587034437973921672708265913562683759067104899424750166938246676921473032467032199226103703833898397053466062371600337728978338060713362898078048382632847933495189127457220259659854965796202331833896975890736915951090892502259174731355688644843692945536224234249890267280125267951840657136688043259050619998127318676561153606404734072152203289103447499870087081393601184853284220195180216338274350694149359591890889193639931135124562754657298694774164584626807679635788377956313648346107245246440691406285787
        self.assertEqual(RSA_sign(kpriv,original), RSA_signat)

class Test_1_4_Validate_Sign(unittest.TestCase):

    def test_1(self):
        e = 6262051786919039420094506936096610013112923123780749602600802403286541549335765437161145424955737669373972842061737523783381399460331896516523902078377154692320704182585988958024363574397350182814479440408073739060222819737991688815298818720994636036087653784105276777697119530753465216913869838112863157890415352871935597857236977029575822228311018055253547717734552016045074801214936803375218550676046319686793551396109420417072843622538966529057395574835290678840258405855196317988098155303412261266371332501160127311383694620681353017489647603398890392622456664393648370907455205272635660280650919906828051973985
        n = 12490073924223973779952495174551835559350251780425933466818064644419814523190460892869430544625817615345292005394854093583854278346073855545541683465103004671901115651264674924779937518729229595410007440282846953305105664056093882498031929778584790219608025635824148765450058312261789533721347023151643897433452703679100522853171632876023460043637975557224061804349249718291582035964640430215339591802875669290619514873719781832743118238764929141274207659125842932932381727782094674562403961344535621089055860560649256579713527482427499874160417549452560201308589570145059622106308558193372236212872798521411647143373
        original = 123456789123456789123456789
        s = 2573032624927937215507080690978996457543877278908959582994842345262897843968730124642174392615192436371178504811210326636717361090339967438794290094093595989411012712715773021031989395116280501158093270612249925520311188773356965135467620228606175138527766562243528618676743481447864698894387195650504835118652938613234293101214209196123060163504450443856735948945021699008549146902842708795040585480915634919940942376837918603830281194190562480719396697984366071226059307118674308953425454004634977412695916147821896130272902855119536581679895825296846234754127751266789571034929567535157398319218314437301607159686
        kpub=(e,n)
        self.assertEqual(True, Validate_Sign(kpub,original,s))

    def test_2(self):
        e = 8284494076566453048618838282960334924326647279424294998520819836618631238308133432920311650879532228535705229266486975984396251670674285004459401393789032382089039403599249912841745800014886472281046792741997114487805412141282928092726808709503191083707659061729602224635125983849638499616381275011852847830978428864788040749688564239259220965958113085425234704351176707807075588249853741752403130834849948684711178047042718392166281871373216556722092964974260519865038565439524410776183324555337721579176814409617633166174978744405512931658898430410889415285931418565318966579581817374059964488988553435690017078967
        n = 15380775453681009972505003122528717374996891402779162175694608719397847385409727967401241761171247749682603676227235917255445409275943764225274182020002802056614287960413831702098119030914739187429418372441105333693531495330574229507790887507729935303073571826335272941595552272874610851494877272281214696088513516112913499712692511318747229328879036908014860332657066441255670572074301957417388825851965187728431734408133362937654272029787080626082943779913449395077170730182258855074693243159442650090374018301443880480826469026403949309484303348375861963462248359431660973216993625736140793581758835424535014230213
        original = 123456789123456789123456789
        s = 9128595458381216738431165701026840709793824867502407477777744938789898042117029953065486408673739721840557855223420185106603540064417132368373159104857714209670500164030418140739654377859715172716120232920575747002908335344690209116713393081236083402645481971196315789403951952597334307126227346877524423097468985304197493892265579463927959647514574293776702412463601389915887715680303467660984059463403457323150428937362828047138977560332398904996172206654718493244509017245633007604442527920630206112282761561432742818625121305420336835021336460147961741259351720116025403103271220600449795729345065311386752404930
        kpub=(e,n)
        self.assertEqual(True, Validate_Sign(kpub,original,s))

    def test_3(self):
        e = 6186601325711675941244323666058049215840729312287320162548003058689634160917027659784682199990058639683984810368807584867078541165057326102823397346444817147995150134421707249648027131574637320185592332561307143499135737680831721002739591292083748088500981921241826530965696678555794323255288182086310264362969530928468356206560642364836152199338711140658104204245197550354243297654647834958107406524328788878967650769748431482028982153598894772229663178593673272248432116612826922211880109909243304492911325215515187522475838723371184594526995898995298925644783469768892785978412112854348548461918790539683345614689
        n = 13616533735883970052413838279723760115708426980562018698049015792739955800710480502687597410655589973984016127678722266429042079924362574088018716365205500869344675068861124939290689683703719895670879718069093845054594500669727194798875025893634378942007675631226456622723334431609006443068839048116370455252271727910305230611520864252114946667194969597777906136564458165045256469775393593345677064117088612813323049098208202835272261662447016765714133116599007315993016441924807492601315967551928325338035095839135673310214583099626377308824254252551382765376660631310178938251498594761438973915054332435118149192801
        original = 987654321987654321987654321
        s = 10220606035194454538208519084006110780268880959238040965037789735340309014485645674476820973932582227127295577587034437973921672708265913562683759067104899424750166938246676921473032467032199226103703833898397053466062371600337728978338060713362898078048382632847933495189127457220259659854965796202331833896975890736915951090892502259174731355688644843692945536224234249890267280125267951840657136688043259050619998127318676561153606404734072152203289103447499870087081393601184853284220195180216338274350694149359591890889193639931135124562754657298694774164584626807679635788377956313648346107245246440691406285787
        kpub=(e,n)
        self.assertEqual(True, Validate_Sign(kpub,original,s))

class Test_2_1_calcular_sha256(unittest.TestCase):

    def test_1(self):
        original = 987654321987654321987654321
        hash_hex = '06bba795aba4b142695064921826d20918a2000a6492e101d066f0ab5e0e3664'
        
        self.assertEqual(calcular_sha256(original), hash_hex)

    def test_2(self):
        original = 123456789123456789123456789
        hash_hex = 'e8331016d2b710ba36ca20ddd92121f83033597dc7775a4ee3c1260d21d9eaa5'
        
        self.assertEqual(calcular_sha256(original), hash_hex)


class Test_2_2_segona_preimatge(unittest.TestCase):

    def test_1(self):
        original = 123456789123456789123456789
        self.assertEqual(None, segona_preimatge(original))

    def test_2(self):
        original = 987654321987654321987654321
        self.assertEqual(None, segona_preimatge(original))



if __name__ == '__main__':

    # create a suite with all tests
    test_classes_to_run = [Test_1_1_encrypt,
                           Test_1_2_decrypt,
                           Test_1_3_RSA_sign,
                           Test_1_4_Validate_Sign,
                           Test_2_1_calcular_sha256,
                           Test_2_2_segona_preimatge
                           ]
    loader = unittest.TestLoader()
    suites_list = []
    for test_class in test_classes_to_run:
        suite = loader.loadTestsFromTestCase(test_class)
        suites_list.append(suite)

    all_tests_suite = unittest.TestSuite(suites_list)

    # run the test suite with high verbosity
    runner = unittest.TextTestRunner(verbosity=2)
    results = runner.run(all_tests_suite)



